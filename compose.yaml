services:
  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./db/postgres:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=shareit
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=12345
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  db-init:
    image: postgres:16.1
    container_name: db-init
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
      - bash
      - -c
      - |
        set -e
        psql postgresql://dbuser:12345@db:5432/shareit -v ON_ERROR_STOP=1 <<-EOSQL
        CREATE TABLE IF NOT EXISTS users (
          user_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          name VARCHAR(40),
          email VARCHAR(255)
        );
        
        CREATE TABLE IF NOT EXISTS booking_status (
          id INT PRIMARY KEY,
          name VARCHAR(40) NOT NULL
        );
        
        CREATE TABLE IF NOT EXISTS item_requests (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          description VARCHAR(255) NOT NULL,
          user_id INTEGER REFERENCES users ON DELETE CASCADE,
          created TIMESTAMP WITHOUT TIME ZONE
        );
        
        CREATE TABLE IF NOT EXISTS items (
          item_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          name VARCHAR(40),
          description VARCHAR(255),
          available BOOLEAN,
          owner_id INTEGER REFERENCES users ON DELETE CASCADE,
          request_id INTEGER REFERENCES item_requests ON DELETE CASCADE
        );
        
        CREATE TABLE IF NOT EXISTS booking (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          start_date TIMESTAMP WITHOUT TIME ZONE,
          end_date TIMESTAMP WITHOUT TIME ZONE,
          item_id INTEGER REFERENCES items ON DELETE CASCADE,
          booker_id INTEGER REFERENCES users ON DELETE CASCADE,
          status varchar(50)
        );
        
        CREATE TABLE IF NOT EXISTS comments (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          item_id INTEGER REFERENCES items ON DELETE CASCADE,
          author_id INTEGER REFERENCES users ON DELETE CASCADE,
          text VARCHAR(255),
          created TIMESTAMP WITHOUT TIME ZONE
        );
        
        CREATE TABLE IF NOT EXISTS responses (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          item_id INTEGER REFERENCES items ON DELETE CASCADE,
          request_id INTEGER REFERENCES item_requests ON DELETE CASCADE
        );
        EOSQL
#        INSERT INTO booking_status (id, name) VALUES
#                  (1, 'WAITING'),
#                  (2, 'APPROVED'),
#                  (3, 'REJECTED'),
#                  (4, 'CANCELED')
#                ON CONFLICT (id) DO NOTHING;